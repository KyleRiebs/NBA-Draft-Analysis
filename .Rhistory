#import from csv
combine_stats <- read.csv("Data\\combine_stats.csv")
player_stats <- read.csv("Data\\player_stats.csv")
#Extract just years 2010-2021
combine_stats <- subset(combine_stats, combine_stats$YEAR < 2022)
player_stats <- subset(player_stats, player_stats$year > 1999)
#Remove comma
combine_stats$PLAYER <- str_replace(combine_stats$PLAYER, ",", "")
#Put first name first
combine_names <- combine_stats$PLAYER
combine_names <- str_split(combine_names, " ")
for(i in 1:length(combine_names)){
combine_stats$PLAYER[i] <- paste(combine_names[[i]][2], combine_names[[i]][1])
}
#Order them by name ascending
combine_stats <- combine_stats[order(combine_stats$PLAYER),]
player_stats <- player_stats[order(player_stats$player),]
#Combine both datasets based on player name
colnames(combine_stats) <- str_to_lower(colnames(combine_stats))
combine_and_player_stats <- merge(combine_stats, player_stats, by = "player")
#Delete unused variables
deletes <- c("id", "rank", "college", "year.y", "bmi",
"handl", "handw", "stndvert", "lpvert", "lane",
"shuttle", "pan", "points", "bar", "pan", "pbhgt",
"team", "minutes_played", "X3_point_percentage",
"free_throw_percentage", "average_minutes_played",
"win_shares_per_48_minutes", "total_rebounds", "assist")
combine_and_player_stats <- combine_and_player_stats[, !(names(combine_and_player_stats) %in% deletes)]
combine_and_player_stats <- remove_na(combine_and_player_stats)
write.csv(combine_and_player_stats, file = "Data\\cleaned_combined_stats.csv")
guards <- combined_stats[combined_stats$genpos == "Guard", ]
knitr::opts_chunk$set(echo = TRUE)
source("00_requirements.r")
source("01_funct_DataCleaning.r")
combined_stats <- read.csv("Data\\processed_combined_stats.csv")
combined_stats <- to_factors(combined_stats)
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
corrplot(cor(guards_numeric))
plot(combined_stats$hgt, combined_stats$average_total_rebounds)
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
corrplot(cor(guards_numeric))
plot(guards$sprint, guards$points_per_game)
colnames(guards)
colnames(guards$value_over_replacement)
knitr::opts_chunk$set(echo = TRUE)
combine_and_player_stats <- read.csv("Data\\cleaned_combined_stats.csv")
#Create new position variable for more general "guard, "wing" and "big" labels
newpos <- vector(mode = "character", length = length(combine_and_player_stats))
count <- 1
for(i in combine_and_player_stats$pos){
if(i == "PG" | i == "SG" | i == "SG-PG" | i == "PG-SG"){
newpos[count] <- "Guard"
}
if(i == "SF" | i == "SF-PF" | i == "PF-SF" | i == "SG-SF" | i == "SF-SG"){
newpos[count] <- "Wing"
}
if(i == "PF" | i == "C" | i == "PF-C" | i == "C-PF"){
newpos[count] <- "Big"
}
count <- count + 1
}
#Add new variable to dataframe
combine_and_player_stats$genpos <- newpos
#Delete old pos variable
deletes <- c("pos")
combine_and_player_stats <- combine_and_player_stats[, !(names(combine_and_player_stats) %in% deletes)]
guards[, !player]
guards[, !"player"]
new_names <- colnames(combine_and_player_stats)
new_names
new_names[3] <- "year"
new_names[16] <- "fgp"
new_names[17] <- "ppg"
new_names[18] <- "rpg"
new_names[19] <- "apg"
new_names[21] <- "plus_minus"
new_names[22] <- "val_over_replace"
new_names
colnames(combine_and_player_stats) <- new_names
new_names <- colnames(combine_and_player_stats)
new_names[3] <- "year"
new_names[16] <- "fgp"
new_names[17] <- "ppg"
new_names[18] <- "rpg"
new_names[19] <- "apg"
new_names[21] <- "plus_minus"
new_names[22] <- "val_over_replace"
new_names
colnames(combine_and_player_stats) <- new_names
#Save processed data
write.csv(combine_and_player_stats, file = "Data\\processed_combined_stats.csv")
knitr::opts_chunk$set(echo = TRUE)
source("00_requirements.r")
source("01_funct_DataCleaning.r")
combined_stats <- read.csv("Data\\processed_combined_stats.csv")
combined_stats <- to_factors(combined_stats)
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
corrplot(cor(guards_numeric))
plot(guards$sprint, guards$points_per_game)
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
corrplot(cor(guards_numeric))
plot(guards$sprint, guards$ppg)
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
corrplot(cor(guards_numeric))
plot(guards$sprint, guards$apg)
num_cols <- rep("", n_vars)
only_numeric <- function(df){ #Return a dataframe of only the numeric variables in original
n_vars <- ncol(df)
num_cols <- rep("", n_vars)
for (var_ind in 1:n_vars) {
var <- df[, var_ind]
if (class(var) == "numeric" | class(var) == "integer") {
num_cols[var_ind] <- colnames(df)[var_ind]
}
}
df_new <- df[, (names(df) %in% num_cols)]
return(df_new)
}
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
corrplot(cor(guards_numeric))
plot(guards$sprint, guards$apg)
knitr::opts_chunk$set(echo = TRUE)
source("00_requirements.r")
source("01_funct_DataCleaning.r")
combined_stats <- read.csv("Data\\processed_combined_stats.csv")
combined_stats <- to_factors(combined_stats)
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
corrplot(cor(guards_numeric))
plot(guards$sprint, guards$apg)
knitr::opts_chunk$set(echo = TRUE)
source("00_requirements.r")
source("01_funct_DataCleaning.r")
combined_stats <- read.csv("Data\\processed_combined_stats.csv")
combined_stats <- to_factors(combined_stats)
?read.csv
knitr::opts_chunk$set(echo = TRUE)
source("00_requirements.r")
source("01_funct_DataCleaning.r")
combined_stats <- read.csv("Data\\processed_combined_stats.csv", as.is = stringsAsFactors)
knitr::opts_chunk$set(echo = TRUE)
source("00_requirements.r")
source("01_funct_DataCleaning.r")
combined_stats <- read.csv("Data\\processed_combined_stats.csv", stringsAsFactors = T)
#combined_stats <- to_factors(combined_stats)
knitr::opts_chunk$set(echo = TRUE)
source("00_requirements.r")
source("01_funct_DataCleaning.r")
combined_stats <- read.csv("Data\\processed_combined_stats.csv", stringsAsFactors = T)
write.csv()
?write.csv
write.csv(combine_and_player_stats, file = "Data\\cleaned_combined_stats.csv", row.names = T)
knitr::opts_chunk$set(echo = TRUE)
source("00_requirements.r")
source("01_funct_DataCleaning.r")
combined_stats <- read.csv("Data\\processed_combined_stats.csv", stringsAsFactors = T)
combine_and_player_stats <- read.csv("Data\\cleaned_combined_stats.csv")
combine_and_player_stats <- read.csv("Data\\cleaned_combined_stats.csv")
#Create new position variable for more general "guard, "wing" and "big" labels
newpos <- vector(mode = "character", length = length(combine_and_player_stats))
count <- 1
for(i in combine_and_player_stats$pos){
if(i == "PG" | i == "SG" | i == "SG-PG" | i == "PG-SG"){
newpos[count] <- "Guard"
}
if(i == "SF" | i == "SF-PF" | i == "PF-SF" | i == "SG-SF" | i == "SF-SG"){
newpos[count] <- "Wing"
}
if(i == "PF" | i == "C" | i == "PF-C" | i == "C-PF"){
newpos[count] <- "Big"
}
count <- count + 1
}
#Add new variable to dataframe
combine_and_player_stats$genpos <- newpos
#Delete old pos variable
deletes <- c("pos")
combine_and_player_stats <- combine_and_player_stats[, !(names(combine_and_player_stats) %in% deletes)]
new_names <- colnames(combine_and_player_stats)
new_names[3] <- "year"
new_names[16] <- "fgp"
new_names[17] <- "ppg"
new_names[18] <- "rpg"
new_names[19] <- "apg"
new_names[21] <- "plus_minus"
new_names[22] <- "val_over_replace"
colnames(combine_and_player_stats) <- new_names
#Save processed data
write.csv(combine_and_player_stats, file = "Data\\processed_combined_stats.csv", row.names = F)
knitr::opts_chunk$set(echo = TRUE)
source("00_requirements.r")
source("01_funct_DataCleaning.r")
combined_stats <- read.csv("Data\\processed_combined_stats.csv", stringsAsFactors = T)
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
corrplot(cor(guards_numeric))
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
corrplot(cor(guards_numeric))
plot(guards$sprint, guards$apg)
guards <- combined_stats[combined_stats$genpos == "Guard", ]
knitr::opts_chunk$set(echo = TRUE)
source("00_requirements.r")
source("01_funct_DataCleaning.r")
combined_stats <- read.csv("Data\\processed_combined_stats.csv", stringsAsFactors = T)
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
corrplot(cor(guards_numeric))
knitr::opts_chunk$set(echo = TRUE)
source("00_requirements.r")
source("01_funct_DataCleaning.r")
#import from csv
combine_stats <- read.csv("Data\\combine_stats.csv")
player_stats <- read.csv("Data\\player_stats.csv")
knitr::opts_chunk$set(echo = TRUE)
source("00_requirements.r")
source("01_funct_DataCleaning.r")
#import from csv
combine_stats <- read.csv("Data\\combine_stats.csv")
player_stats <- read.csv("Data\\player_stats.csv")
#Extract just years 2010-2021
combine_stats <- subset(combine_stats, combine_stats$YEAR < 2022)
player_stats <- subset(player_stats, player_stats$year > 1999)
#Remove comma
combine_stats$PLAYER <- str_replace(combine_stats$PLAYER, ",", "")
#Put first name first
combine_names <- combine_stats$PLAYER
combine_names <- str_split(combine_names, " ")
for(i in 1:length(combine_names)){
combine_stats$PLAYER[i] <- paste(combine_names[[i]][2], combine_names[[i]][1])
}
#Order them by name ascending
combine_stats <- combine_stats[order(combine_stats$PLAYER),]
player_stats <- player_stats[order(player_stats$player),]
#Combine both datasets based on player name
colnames(combine_stats) <- str_to_lower(colnames(combine_stats))
combine_and_player_stats <- merge(combine_stats, player_stats, by = "player")
#Delete unused variables
deletes <- c("id", "rank", "college", "year.y", "bmi", "X",
"handl", "handw", "stndvert", "lpvert", "lane",
"shuttle", "pan", "points", "bar", "pan", "pbhgt",
"team", "minutes_played", "X3_point_percentage",
"free_throw_percentage", "average_minutes_played",
"win_shares_per_48_minutes", "total_rebounds", "assist")
combine_and_player_stats <- combine_and_player_stats[, !(names(combine_and_player_stats) %in% deletes)]
combine_and_player_stats <- remove_na(combine_and_player_stats)
write.csv(combine_and_player_stats, file = "Data\\cleaned_combined_stats.csv", row.names = F)
combine_and_player_stats <- read.csv("Data\\cleaned_combined_stats.csv")
#Create new position variable for more general "guard, "wing" and "big" labels
newpos <- vector(mode = "character", length = length(combine_and_player_stats))
count <- 1
for(i in combine_and_player_stats$pos){
if(i == "PG" | i == "SG" | i == "SG-PG" | i == "PG-SG"){
newpos[count] <- "Guard"
}
if(i == "SF" | i == "SF-PF" | i == "PF-SF" | i == "SG-SF" | i == "SF-SG"){
newpos[count] <- "Wing"
}
if(i == "PF" | i == "C" | i == "PF-C" | i == "C-PF"){
newpos[count] <- "Big"
}
count <- count + 1
}
#Add new variable to dataframe
combine_and_player_stats$genpos <- newpos
#Delete old pos variable
deletes <- c("pos")
combine_and_player_stats <- combine_and_player_stats[, !(names(combine_and_player_stats) %in% deletes)]
new_names <- colnames(combine_and_player_stats)
new_names
new_names <- colnames(combine_and_player_stats)
new_names[2] <- "year"
new_names[14] <- "fgp"
new_names[15] <- "ppg"
new_names[16] <- "rpg"
new_names[17] <- "apg"
new_names[19] <- "plus_minus"
new_names[20] <- "val_over_replace"
colnames(combine_and_player_stats) <- new_names
#Save processed data
write.csv(combine_and_player_stats, file = "Data\\processed_combined_stats.csv", row.names = F)
corrplot(cor(guards_numeric))
knitr::opts_chunk$set(echo = TRUE)
source("00_requirements.r")
source("01_funct_DataCleaning.r")
combined_stats <- read.csv("Data\\processed_combined_stats.csv", stringsAsFactors = T)
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
corrplot(cor(guards_numeric))
plot(guards$sprint, guards$apg)
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
corrplot(cor(guards_numeric), method = 'square', order = 'FPC', type = 'lower', diag = FALSE)
plot(guards$sprint, guards$apg)
corrplot(cor(guards_numeric), method = 'square', type = 'lower', diag = FALSE)
new_names <- colnames(combine_and_player_stats)
new_names[2] <- "year"
new_names[14] <- "fgp"
new_names[15] <- "ppg"
new_names[16] <- "rpg"
new_names[17] <- "apg"
new_names[19] <- "plus_minus"
new_names[20] <- "val_over_replace"
colnames(combine_and_player_stats) <- new_names
#Save processed data
write.csv(combine_and_player_stats, file = "Data\\processed_combined_stats.csv", row.names = F)
new_names
new_names <- colnames(combine_and_player_stats)
new_names[2] <- "year"
new_names[10] <- "jumping_rch"
new_names[14] <- "fgp"
new_names[15] <- "ppg"
new_names[16] <- "rpg"
new_names[17] <- "apg"
new_names[19] <- "plus_minus"
new_names[20] <- "val_over_replace"
colnames(combine_and_player_stats) <- new_names
#Save processed data
write.csv(combine_and_player_stats, file = "Data\\processed_combined_stats.csv", row.names = F)
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
corrplot(cor(guards_numeric), method = 'square', type = 'lower', diag = FALSE)
plot(guards$sprint, guards$apg)
knitr::opts_chunk$set(echo = TRUE)
source("00_requirements.r")
source("01_funct_DataCleaning.r")
combined_stats <- read.csv("Data\\processed_combined_stats.csv", stringsAsFactors = T)
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
corrplot(cor(guards_numeric), method = 'square', type = 'lower', diag = FALSE)
plot(guards$sprint, guards$apg)
par(mfrow = c(2,1))
#Creates two smaller correlation plots to make it more readable
split_corr <- function(df){
measurments <- c("hgt",  "stndrch", "wngspn", "wgt", "bf",
"ppg", "rpg", "apg", "fgp", "win_shares", "plus_minus", "val_over_replace")
abilities <- c("bench",  "sprint", "jumping_rch",
"ppg", "rpg", "apg", "fgp", "win_shares", "plus_minus", "val_over_replace")
measur_df <- df[, !(names(df) %in% measurments)]
abilities_df <- df[, !(names(df) %in% abilities)]
par(mfrow = c(2,1))
corrplot(cor(measur_df), method = 'square', type = 'lower', diag = FALSE)
corrplot(cor(abilities_df), method = 'square', type = 'lower', diag = FALSE)
}
#corrplot(cor(guards_numeric), method = 'square', type = 'lower', diag = FALSE)
split_corr(guards_numeric)
knitr::opts_chunk$set(echo = TRUE)
source("00_requirements.r")
source("01_funct_DataCleaning.r")
source("02_funct_DataVisualization.r")
combined_stats <- read.csv("Data\\processed_combined_stats.csv", stringsAsFactors = T)
#Creates two smaller correlation plots to make it more readable
split_corr <- function(df){
measurments <- c("hgt",  "stndrch", "wngspn", "wgt", "bf",
"ppg", "rpg", "apg", "fgp", "win_shares", "plus_minus", "val_over_replace")
abilities <- c("bench",  "sprint", "jumping_rch",
"ppg", "rpg", "apg", "fgp", "win_shares", "plus_minus", "val_over_replace")
measur_df <- df[, (names(df) %in% measurments)]
abilities_df <- df[, (names(df) %in% abilities)]
par(mfrow = c(1,2))
corrplot(cor(measur_df), method = 'square', type = 'lower', diag = FALSE)
corrplot(cor(abilities_df), method = 'square', type = 'lower', diag = FALSE)
}
?corrplot
#corrplot(cor(guards_numeric), method = 'square', type = 'lower', diag = FALSE)
ability_corr(guards_numeric)
?mtext
?corrplot
knitr::opts_chunk$set(echo = TRUE)
source("00_requirements.r")
source("01_funct_DataCleaning.r")
source("02_funct_DataVisualization.r")
combined_stats <- read.csv("Data\\processed_combined_stats.csv", stringsAsFactors = T)
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
ability_corr(guards_numeric)
mtext("Ability Correlation Plot", at=3.2, line=2, cex=1.5)
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
ability_corr(guards_numeric)
mtext("Guard Ability Correlation", at=3.2, line=2, cex=1.5)
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
ability_corr(guards_numeric)
mtext("Guard Ability Correlation", at=3.2, line=2, cex=1.5)
measurment_corr(guards_numeric)
mtext("Guard Measurments Correlation", at=3.2, line=2, cex=1.5)
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
ability_corr(guards_numeric)
mtext("Guard Ability Correlation", at=3.2, line=2, cex=1.5)
measurment_corr(guards_numeric)
mtext("Guard Measurments Correlation", at=3.2, line=2, cex=1.5)
plot(guards$ppg, guards$sprint)
abline(lm(ppg ~ sprint, data = guards))
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
ability_corr(guards_numeric)
mtext("Guard Ability Correlation", at=3.2, line=2, cex=1.5)
measurment_corr(guards_numeric)
mtext("Guard Measurments Correlation", at=3.2, line=2, cex=1.5)
plot(guards$sprint, guards$ppg)
abline(lm(sprint ~ ppg, data = guards))
lm(sprint ~ ppg, data = guards)
lm(ppg ~ sprint, data = guards)
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
ability_corr(guards_numeric)
mtext("Guard Ability Correlation", at=3.2, line=2, cex=1.5)
measurment_corr(guards_numeric)
mtext("Guard Measurments Correlation", at=3.2, line=2, cex=1.5)
plot(guards$ppg, guards$sprint)
abline(lm(ppg ~ sprint, data = guards))
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
ability_corr(guards_numeric)
mtext("Guard Ability Correlation", at=3.2, line=2, cex=1.5)
measurment_corr(guards_numeric)
mtext("Guard Measurments Correlation", at=3.2, line=2, cex=1.5)
plot(guards$ppg, guards$sprint)
abline(lm(ppg ~ sprint, data = guards))
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
ability_corr(guards_numeric)
mtext("Guard Ability Correlation", at=3.2, line=2, cex=1.5)
measurment_corr(guards_numeric)
mtext("Guard Measurments Correlation", at=3.2, line=2, cex=1.5)
plot(guards$apg, guards$hgt)
abline(lm(apg ~ hgt, data = guards))
guards <- combined_stats[combined_stats$genpos == "Guard", ]
#Physical Ability Variables
summary(lm(points_per_game ~ sprint + bench + jumping_rch , data = guards))
ppg_sprint <- lm(ppg ~ sprint + bench + jumping_rch , data = guards)
ppg_split[1]
ppg_sprint[1]
ppg_sprint[1]$coefficients
ppg_sprint[1]$coefficients$sprint
ppg_sprint[1]$coefficients[2]
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
ability_corr(guards_numeric)
mtext("Guard Ability Correlation", at=3.2, line=2, cex=1.5)
measurment_corr(guards_numeric)
mtext("Guard Measurments Correlation", at=3.2, line=2, cex=1.5)
ppg_sprint <- lm(ppg ~ sprint + bench + jumping_rch , data = guards)
plot(guards$ppg, guards$sprint)
abline(ppg_sprint)
ppg_sprint[2]
ppg_sprint$fitted.values
ppg_sprint$coefficients
?abline
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
ability_corr(guards_numeric)
mtext("Guard Ability Correlation", at=3.2, line=2, cex=1.5)
measurment_corr(guards_numeric)
mtext("Guard Measurments Correlation", at=3.2, line=2, cex=1.5)
ppg_sprint <- lm(ppg ~ sprint + bench + jumping_rch , data = guards)
plot(guards$ppg, guards$sprint)
abline(ppg_sprint$coefficients[1], ppg_sprint$coefficients[2])
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
ability_corr(guards_numeric)
mtext("Guard Ability Correlation", at=3.2, line=2, cex=1.5)
measurment_corr(guards_numeric)
mtext("Guard Measurments Correlation", at=3.2, line=2, cex=1.5)
ppg_sprint <- lm(ppg ~ sprint + bench + jumping_rch , data = guards)
plot(guards$sprint, guards$ppg)
abline(ppg_sprint$coefficients[1], ppg_sprint$coefficients[2])
summary(lm(ppg ~ sprint, data = guards))
#Physical Ability Variables
summary(lm(apg ~ sprint + bench + jumping_rch, data = guards))
#Measurement Variables - not sig
summary(lm(apg ~ hgt + stndrch + wngspn + wgt + bf, data = guards))
#Physical Ability Variables
summary(lm(rpg ~ sprint + bench + jumping_rch, data = guards))
#Measurement Variables - not sig
summary(lm(rpg ~ hgt + stndrch + wngspn + wgt + bf, data = guards))
#Win Shares:
#Physical Ability Variables
summary(lm(win_shares ~ sprint + bench + jumping_rch , data = guards))
#Measurement Variables - not sig
summary(lm(win_shares ~ hgt + stndrch + wngspn + wgt + bf, data = guards))
#Plus-minus: How many points your team scored compared to the other team while
#            the player was on the floor
#Physical Ability Variables
summary(lm(plus_minus ~ sprint + bench + jumping_rch , data = guards))
#Measurement Variables - not sig
summary(lm(plus_minus ~ hgt + stndrch + wngspn + wgt + bf, data = guards))
ability_lm_guards <- lm(win_shares ~ sprint + bench + jumping_rch , data = guards)
plot(guards$sprint, guards$win_shares)
guards <- combined_stats[combined_stats$genpos == "Guard", ]
guards_numeric <- only_numeric(guards)
ability_corr(guards_numeric)
mtext("Guard Ability Correlation", at=3.2, line=2, cex=1.5)
measurment_corr(guards_numeric)
mtext("Guard Measurments Correlation", at=3.2, line=2, cex=1.5)
ability_lm_guards <- lm(win_shares ~ sprint + bench + jumping_rch , data = guards)
plot(guards$sprint, guards$win_shares)
abline(ability_lm_guards)
View(guards)
View(guards)
#Physical Ability Variables
summary(lm(win_shares ~ sprint + bench + jumping_rch , data = guards))
View(guards)
View(guards)
